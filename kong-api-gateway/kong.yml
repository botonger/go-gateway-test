_format_version: "2.1"

services:
  - name : gists-google
    url: https://api.github.com
    routes:
      - name: gists-routes
        paths:
          - /gists
#API key authentication is one of the most popular ways to conduct API authentication and can be implemented to create and delete access keys as required.
        plugins:
          - name: key-auth
          # enabled: false
consumers:
  #consumer ip-restriction test - consumer
  #allow: 192.0.0.1/8, 172.0.0.1/8
  - custom_id: consumer
    username: consumer
    keyauth_credentials:
      - key: test-header-key
    plugins:
      - name: ip-restriction
        config:
          allow:
            - 192.0.0.1/8
            - 172.0.0.1/8
    #consumer ip-restriction test - consumer1
    #allow: 172.0.0.1/8
  - custom_id: consumer1
    username: consumer1
    keyauth_credentials:
      - key: test-header-key1
    plugins:
      - name: ip-restriction
        config:
          allow:
            - 172.0.0.1/8
  - custom_id: consumer2
    username: consumer2
    keyauth_credentials:
      - key: test-header-key2
    plugins:
      - name: ip-restriction
        config:
          allow:
            - 192.0.0.1/8
  - custom_id: consumer3
    username: consumer3
    keyauth_credentials:
      - key: test-header-key3
    plugins:
      - name: ip-restriction
        config:
          blacklist:
            - 192.0.0.1/8
          whitelist:
            - 172.0.0.1/8
  - custom_id: consumer4
    username: consumer4
    keyauth_credentials:
      - key: test-header-key4
    plugins:
      - name: ip-restriction
        config:
          whitelist:
            - 192.0.0.1/8
          blacklist:
            - 172.0.0.1/8
#rate-limiting service. only possible config 5 minutes per 5 requests.
plugins:
  - name: rate-limiting
    config:
      minute: 5
      policy: local
#The Proxy Caching plugin provides this fast performance using a reverse proxy cache implementation. It caches response entities based on the request method, configurable response code, content type, and can cache per Consumer or per API.
  - name: proxy-cache
    config:
      content_type:
        - "application/json; charset=utf-8"
      cache_ttl: 30
      strategy: memory
  - name: ip-restriction
    route: gists-routes
    config:
      allow:
        - ${{ env "DECK_IP_ADDRESS" }}
